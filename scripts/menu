
#!/bin/bash

#[ -z "$1" ] || [ "$1" == "-h" ] || [ -z "$2" ] && printf '
[ -z "$1" ] || [ "$1" == "-h" ] && printf '
S y n t a x

 menu [command and perimiters] [list of files]
  where [list of files] could be
    file1 file2 ..
  or generated like
    `ls | grep mp3 | ..`
    `find foo | grep bar`
     etc.
  
  Enter "p" to toggle pathway
  \n' && exit


#action="$1"

#
#if [ -z "$2" ]; then
#    actions=0
#else
#    actions="$1"
#fi
#

declare -A menu
source="$1"

function makeList() {
  index=0
  while read F; do
    menu[$index]="$F"
    ((index++))
  done <<< `eval "$source"`
}

makeList

show_path=0

#echo "${menu[@]}"
#read

while true;
do
    
    display="\n\033[1;34m Menu\033[1;30m | $action\033[0m\n\n"
    
    for ((i=0 ; i<index ; i++));
    do
        file=`
            ([ $show_path == 1 ] && echo "${menu[$i]}") ||
            echo "${menu[$i]}" | sed 's/\//\n/g' | tail -n 1
            `
         display+=" \033[1;33m$i\033[0m: $file\n"
    done
    
    display+="\n\033[1;30m > \033[0m"
    
    clear; printf "$display\r"; read -re N A

    if [ "$A" ]; then
        history -s "$N $A"
    fi
    
    if [ -z "$N" ]; then
        break
    elif [ "$N" == "p" ]; then
        let "show_path=0**show_path"
        clear
    else
        if [ "$A" ]; then
            action=$A
        fi
        re='^[0-9]+$'
        if ! [[ $N =~ $re ]]; then
            action="$N $A" 
            continue
        fi

        # Experiment START
        [[ $N+1 -gt $index ]] && continue
        tput cup 3 0
        display=''
        for ((i=0 ; i<index ; i++));
        do
            C=''
            [[ $i -eq $N ]] && C='\033[36m'
            file=`
                ([ $show_path == 1 ] && echo "${menu[$i]}") ||
                echo "${menu[$i]}" | sed 's/\//\n/g' | tail -n 1
                `
            display+=" \033[1;33m$i\033[0m:$C $file\033[0m\n"
        done
        printf "$display\n"
        
        dash=''
        beam=`tput cols`
	((beam--))  # Make symmetrical since start is indented
        for ((i=0 ; i<$beam ; i++)); do
          printf "-"
        done; echo;echo
        #Experiment END
        
        doAction="` echo "$action" | sed 's/VAR/"${menu[$N]}"/g' `"
        eval "$doAction"
        #printf "\nX\r"
        #read
        makeList
    fi

done

clear
